import os
import streamlit as st
import base64
import tempfile
import PyPDF2
from sklearn import svm
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.pipeline import make_pipeline

# Function to extract text from PDF file using PyPDF2
def extract_text_from_pdf(file_content):
    try:
        with tempfile.NamedTemporaryFile(delete=False) as tmp_file:
            tmp_file.write(file_content)
            tmp_file.close()
            pdf_file = open(tmp_file.name, 'rb')
            pdf_reader = PyPDF2.PdfFileReader(pdf_file)
            text = ''
            for page_number in range(pdf_reader.numPages):
                page = pdf_reader.getPage(page_number)
                text += page.extractText()
            return text
    except Exception as e:
        st.error("Error extracting text from PDF:", e)
        return None

# Function to load and preprocess the dataset
def load_dataset(folder_path):
    texts = []
    labels = []
    for root, dirs, files in os.walk(folder_path):
        for file in files:
            file_path = os.path.join(root, file)
            try:
                with open(file_path, 'rb') as f:
                    text = extract_text_from_pdf(f.read())
                    texts.append(text)
                    labels.append(os.path.basename(root))
            except Exception as e:
                st.warning(f"Skipping file {file_path}: {e}")
    return texts, labels

# Load and preprocess the dataset
dataset_folder_path = "path/to/your/dataset/folder"
texts, labels = load_dataset(dataset_folder_path)

# Train SVM classifier
classifier = make_pipeline(TfidfVectorizer(), svm.SVC(kernel='linear'))
classifier.fit(texts, labels)

# Function to classify document type
def classify_document_type(text):
    document_type = classifier.predict([text])[0]
    return document_type

# Streamlit app
st.title("Document Classifier")

# Receive PDF file data from Angular frontend through a POST request
pdf_file = st.file_uploader("Upload a PDF file", type=["pdf"])

if pdf_file is not None:
    file_content = pdf_file.read()
    st.write("File uploaded successfully.")
    st.write("Extracting text from PDF...")
    text = extract_text_from_pdf(file_content)
    if text:
        st.write("Text extracted successfully.")
        st.write("Classifying document type...")
        document_type = classify_document_type(text)
        st.write("Document type:", document_type)
        st.write("Extracted text:")
        st.write(text)
        
        # Send extracted text and document type to the frontend
        response = {'document_type': document_type, 'extracted_text': text}
        st.json(response)
    else:
        st.error("Failed to extract text from the PDF.")
