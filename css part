from flask import Flask, request, jsonify
from flask_cors import CORS
import os
from classify_model import classify_document
from clause_model import predict_clauses
import pdfplumber

app = Flask(__name__)
CORS(app)

@app.route('/classify-document', methods=['POST'])
def classify_document_route():
    if 'file' not in request.files:
        return jsonify({'error': 'No file part'}), 400
    file = request.files['file']
    if file.filename == '':
        return jsonify({'error': 'No selected file'}), 400
    if file and file.filename.endswith('.pdf'):
        file_path = os.path.join('uploads', file.filename)
        file.save(file_path)
        document_type = classify_document(file_path)
        return jsonify({'document_type': document_type})

@app.route('/predict-clauses', methods=['POST'])
def predict_clauses_route():
    if 'file' not in request.files:
        return jsonify({'error': 'No file part'}), 400
    file = request.files['file']
    if file.filename == '':
        return jsonify({'error': 'No selected file'}), 400
    if file and file.filename.endswith('.pdf'):
        file_path = os.path.join('uploads', file.filename)
        file.save(file_path)

        # Extract text from the PDF
        with pdfplumber.open(file_path) as pdf:
            text = ""
            for page in pdf.pages:
                text += page.extract_text()

        predictions = predict_clauses(text)
        return jsonify(predictions)

if __name__ == '__main__':
    if not os.path.exists('uploads'):
        os.makedirs('uploads')
    app.run(debug=True)
