from flask import Flask, request, jsonify
import pdfplumber
import pickle
import tensorflow as tf
from tensorflow.keras.preprocessing.sequence import pad_sequences
from sklearn.preprocessing import LabelEncoder
from classify_model import extract_text_from_pdf, preprocess_text, tokenizer as doc_tokenizer, label_encoder as doc_label_encoder, max_length as doc_max_length, classify_document as predict_document_type, train_model as train_document_model
from clause_model import preprocess_text as preprocess_clause_text, predict_clauses, vectorizer, df

app = Flask(__name__)

@app.route('/upload-pdf', methods=['POST'])
def upload_pdf():
    if 'file' not in request.files:
        return jsonify({"error": "No file part"}), 400
    file = request.files['file']
    if file.filename == '':
        return jsonify({"error": "No selected file"}), 400

    text = extract_text_from_pdf(file)
    doc_type = predict_document_type(text)

    return jsonify({
        "doc_type": doc_type,
        "extracted_text": text
    })

@app.route('/predict-clause', methods=['POST'])
def predict_clause():
    data = request.json
    if 'text' not in data:
        return jsonify({"error": "Missing 'text' parameter"}), 400

    input_text = data['text']
    clauses = predict_clauses(input_text)

    return jsonify({
        "clauses": clauses
    })

if __name__ == '__main__':
    app.run(debug=True)
